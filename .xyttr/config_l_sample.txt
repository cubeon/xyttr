;;; -*- mode:lisp; package: xyttr -*-

(require 'ldrpin)
(require 'googl)

(in-package "xyttr")

(defun is-shorten? (url)
  (string-match "http://\\([^/]+\\)/\\([^/]+\\)$" url))

(defun copy&popup-url ()
  (interactive)
  (multiple-value-bind (url beg) (focused-url)
    (let ((url (expand-short-url url)))
      (copy-to-clipboard url)
      (message "Copied: ~A" url)
      (popup-string url beg))))

(defun copy-shorten-url ()
  (interactive)
  (whenlet url (focused-url)
    (let ((shorten (if (is-shorten? url) url
		     (googl:shorten url))))
      (copy-to-clipboard shorten)
      (message "Copied: ~A  (~A)" shorten url))))

(defun pin-focused-url ()
  (interactive)
  (whenlet url (focused-url)
    (w/entry (user.screen_name text)
      (ldrpin:ldrpin-add (expand-short-url url)
			 (format nil "@~A: ~A" user.screen_name text)))))

(let ((m *xyttr-timeline-keymap*))
  (define-key m '(#\c #\u) 'copy&popup-url)
  (define-key m '(#\c #\s) 'copy-shorten-url)
  (define-key m #\P 'pin-focused-url)
  )

(provide "xyttr/config")
